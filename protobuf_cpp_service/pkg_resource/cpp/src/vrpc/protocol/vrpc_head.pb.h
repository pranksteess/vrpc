// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vrpc_head.proto

#ifndef PROTOBUF_vrpc_5fhead_2eproto__INCLUDED
#define PROTOBUF_vrpc_5fhead_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace vrpc {
namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_vrpc_5fhead_2eproto();
void protobuf_AssignDesc_vrpc_5fhead_2eproto();
void protobuf_ShutdownFile_vrpc_5fhead_2eproto();

class head;

// ===================================================================

class head : public ::google::protobuf::Message {
 public:
  head();
  virtual ~head();

  head(const head& from);

  inline head& operator=(const head& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const head& default_instance();

  void Swap(head* other);

  // implements Message ----------------------------------------------

  head* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const head& from);
  void MergeFrom(const head& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ver = 1;
  inline bool has_ver() const;
  inline void clear_ver();
  static const int kVerFieldNumber = 1;
  inline ::google::protobuf::uint32 ver() const;
  inline void set_ver(::google::protobuf::uint32 value);

  // optional uint32 cmd = 2;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 2;
  inline ::google::protobuf::uint32 cmd() const;
  inline void set_cmd(::google::protobuf::uint32 value);

  // optional uint32 seq = 3;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 3;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:vrpc.protocol.head)
 private:
  inline void set_has_ver();
  inline void clear_has_ver();
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_seq();
  inline void clear_has_seq();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 ver_;
  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 seq_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_vrpc_5fhead_2eproto();
  friend void protobuf_AssignDesc_vrpc_5fhead_2eproto();
  friend void protobuf_ShutdownFile_vrpc_5fhead_2eproto();

  void InitAsDefaultInstance();
  static head* default_instance_;
};
// ===================================================================


// ===================================================================

// head

// optional uint32 ver = 1;
inline bool head::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void head::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void head::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void head::clear_ver() {
  ver_ = 0u;
  clear_has_ver();
}
inline ::google::protobuf::uint32 head::ver() const {
  return ver_;
}
inline void head::set_ver(::google::protobuf::uint32 value) {
  set_has_ver();
  ver_ = value;
}

// optional uint32 cmd = 2;
inline bool head::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void head::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void head::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void head::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 head::cmd() const {
  return cmd_;
}
inline void head::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional uint32 seq = 3;
inline bool head::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void head::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void head::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void head::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 head::seq() const {
  return seq_;
}
inline void head::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace vrpc

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vrpc_5fhead_2eproto__INCLUDED
